""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Error Format configurations
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
function! ErrorFormat__ST20()
    set efm=%tarning-st20icc-%f(%l)-%m,%trror-st20icc-%f(%l)-%m,S%trious-st20icc-%f(%l)-%m,
endfunction

function! ErrorFormat__ST40()
    set efm=%f:%l:%c:\ %tarning:\ %m,%f:%l:\ %tarning:\ %m,%f:%l:%c:\ %trror:\ %m,%f:%l:\ %trror:\ %m
endfunction

function! ErrorFormat__NXP_RIO()
    set efm=\"%f\"\\\,\ line\ %l:\ %trror:\ %m,\"%f\"\\\,\ line\ %l:\ %tarning:\ %m,\"%f\"\\\,\ line\ %l:\ Serious\ %trror:\ %m,\ line\ %l:\ Fatal\ %trror:\ %m
endfunction

function! ErrorFormat__FUJITSU_H61()
    set efm=%f:%l:%c:\ %tarning:\ %m,%f:%l:\ %tarning:\ %m,%f:%l:%c:\ %trror:\ %m,%f:%l:\ %trror:\ %m
endfunction

function! ErrorFormat__CHECKPATCH_BTOC()
    set efm=%WWARNING:\ %m,%C#%s:\ FILE:\ %f:%l:,%EERROR:\ %m,%C#%s:\ FILE:\ %f:%l:,%ICHECK:\ %m,%C#%s:\ FILE:\ %f:%l:
endfunction

function! ErrorFormat__CPPCHECK2()
    set efm=[%f:%l]:\ (%tarning)\ %m,[%f:%l]:\ (%trror)\ %m
endfunction

function! ErrorFormat__CPPCHECK()
    set efm=%f:%l:%trror:%m,%f:%l:%tarning:%m
endfunction

function! CheckpatchBtoc()
    let l:efm=&efm
    call ErrorFormat__CHECKPATCH_BTOC()
    cexpr system("ag -g \"\" --cc --cpp \| xargs checkpatch_btoc.pl -q -f") | bo copen
    let &efm=l:efm
endfunction

function! Cppcheck2()
    let l:efm=&efm
    call ErrorFormat__CPPCHECK2()
    cexpr system("cppcheck -j 8 --force --enable=warning -q ./") | bo copen
    let &efm=l:efm
endfunction

function! Cppcheck()
    let l:efm=&efm
    call ErrorFormat__CPPCHECK()
    cexpr system("cppcheck --template='{file}:{line}:{severity}:{message} [{id}]' -j 4 --force --enable=warning --platform=win64 -q ./") | bo copen
    let &efm=l:efm
endfunction

function! ToggleSpell()
    if &spell
        set nospell
        echo "SPELL: OFF!"
    else
        set spell
        echo "SPELL: ON!"
    end
endfunction

function! ToggleTabSpace()
    if &expandtab
        set noexpandtab
        echo "TABS!"
    else
        set expandtab
        echo "SPACES!"
    end
endfunction

function! StyleWidgets()
    set expandtab
    set tabstop=4
    set shiftwidth=4
    set textwidth=100
    set cinoptions='l1'
    if g:rps_init == 0
        echo "Style: Widgets"
    endif
endfunction

function! StyleBtoc()
    set expandtab
    set tabstop=8
    set shiftwidth=8
    set textwidth=80
    set cinoptions='(0,:0,l1'
    if g:rps_init == 0
        echo "Style: BTOC"
    endif
endfunction

function! StyleKernel()
    set noexpandtab
    set tabstop=8
    set shiftwidth=8
    set textwidth=80
    set cinoptions='(0,:0,l1'
    if g:rps_init == 0
        echo "Style: Kernel"
    endif
endfunction

function! StyleUtk()
    set expandtab
    set tabstop=2
    set shiftwidth=2
    set textwidth=120
    set cinoptions='l1,g0.5,(1s'
    if g:rps_init == 0
        echo "Style: UTK"
    endif
endfunction

